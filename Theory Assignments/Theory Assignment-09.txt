1) When and why do we need lazy()?

	-> "lazy()" is a predefined function in React Library , We need to use this function whenever we need to have lazy loading feature in our application.

	-> When our React project gets larger , we used to bundle this in single JS file. but it increases the size of file and we might face slow loading of site.

	->So to seperate our major JS bundle file into small bundles , we use "lazy()", it takes a callback function which can have "import()" which has the path to the component.

	Example : const Contact_us = lazy(()=>import("./Components/Contact_us"));

2) What is suspense?

	->"Suspense" is a react component available in React library , it used to handle loading state of lazy loading feature, it allows us to suspend rendering until data is fetched in "lazy loading"

	Ex: <Suspense fallback={<Shimmer/>} ><Contact_us/></Suspense>

3) Why we got this error : A component suspended while responding tosynchronous input. This will cause the UI to be replaced with a loading indicator.To fix, updates that suspend should be wrapped with startTransition? How does
suspense fix this error?

	-> We got this error when try to implement lazy loading feature in our project.

	->Let me say why we got this more internally, When you try add lazy loading feature , the code for that lazy loaded component is not fetched until we visit that page. So when we are visiting for that , React immediately tries to render the component but component is not fetched as speed as react rendering. So , because of non-availablity of code , react suspend the component.

	->We used to handle this with "Suspense" component.

 4) Advantages and disadvantages of using this code splitting pattern?

 Advantages : 
	    -> Reduces Memory  size of large file.
	    -> Reduces loading time with existing components for large application.
	    -> Optimized Resource Usage: By loading only the necessary code for the current view or functionality, you can optimize resource usage, such as memory and CPU. This can lead to better performance and stability, especially on devices with limited resources.

DisAdvantages :
	   -> While working with smaller application, it may not have much effect ; In this case, having single JS file is helpfull to render it in UI
	  -> Complexity: Implementing code splitting and lazy loading adds complexity to your codebase. It requires careful planning and coordination to ensure that components are split appropriately and loaded when needed.

5)  When do we and why do we need suspense?

	-> We use "Suspense" component along with "lazy()" whenever we need to use implement lazy loading feature in project to handle the lazy loading state in our web app.

	-> Whenever we use lazy loading feature to a component in our project, the component's code fetched only when we navigate to it ,asynchronously react tries to render to component but the codebase is not available , within that short span of time , react suspends the component.
 
	->So to handle this error state, we use "Suspense" component , it take a "fallback" attribute where we can provide shimmer or loading status until data is fetched.

	->Internally "Suspense" component suspend the rendering of component until it is fetched.


